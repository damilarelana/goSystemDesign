
---
- name: Provision the Worker nodes
  hosts: all
  become: true # validates for sudo
  tasks:
    - name: Install apt packages needed for HTTPS
      apt:
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
        - apt-transport-https
        - ca-certificates
        - curl
        - gnupg-agent
        - software-properties-common

    - name: Add apt signing key for Docker
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add apt repository for stable Docker version
      apt_repository:        # where to download from 
        repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable"
        state: present

    - name: Install Docker and its dependencies
      apt:
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
        - docker-ce
        - docker-ce-cli
        - containerd.io
      notify: "start docker service"

    - name: Add vagrant user to docker group
      user:
        name: vagrant
        group: docker
    
    - name: Remove swapfile from virtual-machine's /etc/fstab     # Prep for Kubernetes installation
      mount:
        name: "{{ item }}"
        fstype: swap
        state: absent
      with_items:
        - swap
        - none
  
    - name: Disable swap
      command: swapoff -a
      when: ansible_swaptotal_mb > 0    

    - name: Add an apt signing key for Kubernetes     # Install Kubernetes [Kubelet, Kubeadm, Kubectl]
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present

    - name: Add apt repository for Kubernetes
      apt_repository: # where to download from 
        repo: "deb https://apt.kubernetes.io/ kubernetes-xenial main" # https://packages.cloud.google.com/apt/dists/kubernetes-xenial/main/binary-amd64
        state: present
        filename: kubernetes.list

    - name: Install Kubernetes binaries
      apt:
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
          - kubelet
          - kubeadm
          - kubectl
    
    - name: Configure node ip # Configure network details for VM
      lineinfile:
        path: /etc/default/kubelet
        line: KUBELET_EXTRA_ARGS=--node-ip={{ node_ip }} # node_ip is passed in by ansible via `ansible.extra_vars` in Vagrant file
        create: yes

    - name: Restart kubelet     # Restart Kubelet
      service:
        name: kubelet
        daemon_reload: yes
        state: restarted

    - name: Copy the join command to server location     # Join Node to the Kubernetes Cluster
      copy: 
        src: join-command
        remote_src: true
        dest: /tmp/join-command.sh mode=0777  # making the join-command read/write/executable

    - name: Join the node to Kubernetes Cluster
      command: sh /tmp/join-command.sh

 #
 # Notification Handlers
 #
  handlers:
    - name: docker status
      service: 
        name: docker 
        state: started
      listen: "start docker service"